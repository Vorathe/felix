@import "compass";

$number-of-columns: 12;
$fixed-width: 960px;
$gutter-width: 20px;
$max-width: none;

$gutter-width-half: $gutter-width / 2;
$flex-widths: ();
$fixx-widths: ();

.container { max-width: $max-width; min-width: $fixed-width + $gutter-width; margin-right: auto; margin-left: auto; padding-left: $gutter-width-half; padding-right: $gutter-width-half; @include box-sizing(border-box); }
.row { margin-left: -$gutter-width-half; margin-right: -$gutter-width-half; }
[class*="grid-"] { padding-left: $gutter-width / 2; padding-right: $gutter-width / 2; float: left; }
[class*="grid-"], [class*="grid-"]:after, [class*="grid-"]:before { @include box-sizing(border-box); }

@for $i from 1 through $number-of-columns {
	$flex-widths: append($flex-widths, $i / $number-of-columns * 100%);
	$fixx-widths: append($fixx-widths, $i / $number-of-columns * $fixed-width);
}

@for $i from 1 through length($flex-widths) {
	$ii: 1;

	.grid-#{$i} {
		width: nth($flex-widths, $i);

		&.fixed-width { width: nth($fixx-widths, $i); }

		@while $ii <= $number-of-columns - $i {
			&.with-fixed-#{$ii} { width: calc(#{nth($flex-widths, $i + $ii)} - #{nth($fixx-widths, $ii)}); }

			$ii: $ii + 1;
		}
	}
}

.no-left-spacing { padding-left: 0; }
.no-right-spacing { padding-right: 0; }